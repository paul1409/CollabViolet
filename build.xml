<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="collab">
	<property environment="env" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="target" value="1.8" />
	<property name="source" value="1.8" />
	<path id="collab.classpath">
		<pathelement location="bin" />
		<pathelement location="lib/javaws.jar" />
		<pathelement location="lib/com.fasterxml.jackson.annotations.jar" />
		<pathelement location="lib/rt.jar" />
	</path>
	<taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpath="checkstyle-7.2-all.jar"/>
	<target name="init" depends="clean">
		<mkdir dir="bin" />
		<copy includeemptydirs="false" todir="bin">
			<fileset dir=".">
				<exclude name="**/*.launch" />
				<exclude name="**/*.java" />
				<exclude name="cloud/" />
				<exclude name="cloud/bin/" />
				<exclude name="cloud/conf/" />
				<exclude name="cloud/libexec/" />
				<exclude name="cloud/project/" />
				<exclude name="jar/" />
				<exclude name="diagrams/" />
			</fileset>
		</copy>
	</target>
	<target name="clean">
		<delete dir="bin" />
	</target>
	<target depends="clean" name="cleanall" />
	<target depends="build-subprojects,build-project" name="build" />
	<target name="build-subprojects" />
	<target depends="init" name="build-project">
		<echo message="${ant.project.name}: ${ant.file}" />
		<javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
			<src path="." />
			<exclude name="cloud/" />
			<exclude name="cloud/bin/" />
			<exclude name="cloud/conf/" />
			<exclude name="cloud/libexec/" />
			<exclude name="cloud/project/" />
			<exclude name="jar/" />
			<exclude name="diagrams/" />
			<classpath refid="collab.classpath" />
		</javac>
	</target>
	<target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects" />
	<target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
		<copy todir="${ant.library.dir}">
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</copy>
		<unzip dest="${ant.library.dir}">
			<patternset includes="jdtCompilerAdapter.jar" />
			<fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar" />
		</unzip>
	</target>
	<target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
		<antcall target="build" />
	</target>
	
	<!-- Runs the main class in case jar file fails-->
	<target name="UMLEditor">
		<java classname="com.horstmann.violet.UMLEditor" failonerror="true" fork="yes">
			<classpath refid="collab.classpath" />
		</java>
	</target>
	
	<!--Runs Checkstyle on source code-->
	<target name="checkstyle" description="Checks for code style violations on all local files">
		<checkstyle config="checkstyle.xml" failureProperty="checkstyle.failure" failOnViolation="false">
			<formatter type="xml" tofile="checkstyle_local.xml" />
			<fileset dir="local" includes="**/*.java" />
		</checkstyle>
		<checkstyle config="checkstyle.xml" failureProperty="checkstyle.failure" failOnViolation="false">
			<formatter type="xml" tofile="checkstyle_violet.xml" />
			<fileset dir="com/horstmann/violet" includes="**/*.java" />
		</checkstyle>
		<checkstyle config="checkstyle.xml" failureProperty="checkstyle.failure" failOnViolation="false">
			<formatter type="xml" tofile="checkstyle_framework.xml" />
			<fileset dir="com/horstmann/violet/framework" includes="**/*.java" />
		</checkstyle>
	</target>


	<target name="war" description="Bundles the application as a WAR file" depends="clean, build, init">
		<mkdir dir="WebContent/WEB-INF/classes" />
		<copy includeemptydirs="false" todir="WebContent/WEB-INF/classes">
			<fileset dir="com/horstmann/violet">
				<include name="**/*.class" />
			</fileset>
		</copy>
		<war destfile="UploadServlet30.war" basedir="WebContent" needxmlfile="false" />
	</target>

	<!--Creates a jar file-->
	<target name="jar" depends="build-project">
		<mkdir dir="jar" />
		<jar destfile="jar/Violet.jar" basedir="bin">
			<manifest>
				<attribute name="Main-Class" value="com.horstmann.violet.UMLEditor" />
			</manifest>
		</jar>
	</target>

	<!--Runs the jar file-->
	<target name="run">
		<java jar="jar/Violet.jar" fork="true" />
	</target>

</project>
